#User function Template for python3
#from queue import Queue
#Function to generate binary numbers from 1 to N using a queue.
def generate(N):
    # code here
    i = 0
    q = []
    q.append("1")
    s1 = q[0]
    if N == 1:
        return q
    for i in range(N):
        val = q[i]
        q.append(val + "0")
        if len(q) == N:
            break
        q.append(val + '1')
        if len(q) == N:
            break
    return q
        


#{ 
 # Driver Code Starts
#Initial Template for Python 3
import atexit
import io
import sys

#Contributed by :  Nikhil Kumar Singh(nickzuck_007)

_INPUT_LINES = sys.stdin.read().splitlines()
input = iter(_INPUT_LINES).__next__
_OUTPUT_BUFFER = io.StringIO()
sys.stdout = _OUTPUT_BUFFER

@atexit.register

def write():
    sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())

if __name__ == '__main__':
    test_cases = int(input())
    for cases in range(test_cases) :
        n = int(input())
        res = generate(n)
        for i in range (len (res)):
            print (res[i], end=" ")
        print()
# } Driver Code Ends
